// <auto-generated />
using LoopMarket.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace OwenVo.Infrastructure.Migrations
{
    [DbContext(typeof(LoopMarketContext))]
    [Migration("20240106222856_CreateTablesV1")]
    partial class CreateTablesV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoopMarket.Domain.Entity.Catalog.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCategory", "Catalog");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Catalog.ItemSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("ItemSubCategory", "Catalog");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Library.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("ItemId");

                    b.ToTable("Book", "Library");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Library.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LitteraryGenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LitteraryGenreId");

                    b.ToTable("Genre", "Library");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Library.LitteraryGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemSubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemSubCategoryId");

                    b.ToTable("LitteraryGenre", "Library");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Merchandise.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemConditionId")
                        .HasColumnType("int");

                    b.Property<int>("PackageFormatId")
                        .HasColumnType("int");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemConditionId");

                    b.HasIndex("PackageFormatId");

                    b.ToTable("Item", "Merchandise");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Merchandise.ItemCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCondition", "Merchandise");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Merchandise.PackageFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackageFormat", "Merchandise");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.SocialMarketplace.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Offer", "SocialMarketplace");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Catalog.ItemSubCategory", b =>
                {
                    b.HasOne("LoopMarket.Domain.Entity.Catalog.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Library.Book", b =>
                {
                    b.HasOne("LoopMarket.Domain.Entity.Library.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoopMarket.Domain.Entity.Merchandise.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Library.Genre", b =>
                {
                    b.HasOne("LoopMarket.Domain.Entity.Library.LitteraryGenre", "LitteraryGenre")
                        .WithMany()
                        .HasForeignKey("LitteraryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LitteraryGenre");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Library.LitteraryGenre", b =>
                {
                    b.HasOne("LoopMarket.Domain.Entity.Catalog.ItemSubCategory", "ItemSubCategory")
                        .WithMany()
                        .HasForeignKey("ItemSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemSubCategory");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.Merchandise.Item", b =>
                {
                    b.HasOne("LoopMarket.Domain.Entity.Merchandise.ItemCondition", "ItemCondition")
                        .WithMany()
                        .HasForeignKey("ItemConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoopMarket.Domain.Entity.Merchandise.PackageFormat", "PackageFormat")
                        .WithMany()
                        .HasForeignKey("PackageFormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCondition");

                    b.Navigation("PackageFormat");
                });

            modelBuilder.Entity("LoopMarket.Domain.Entity.SocialMarketplace.Offer", b =>
                {
                    b.HasOne("LoopMarket.Domain.Entity.Merchandise.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
